{"version":3,"sources":["components/Terms.js","components/templates/CustomText.js","components/templates/CustomCkBox.js","components/templates/CustomSubmit.js","components/templates/CustomLottie.js","components/data/data.js","components/Home.js","components/Chatbot.js","components/templates/CustomSelect.js","components/Report.js","components/templates/ReportPop.js","components/Consult.js","App.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","Terms","useState","open","setOpen","handleClose","Button","onClick","Dialog","TransitionComponent","keepMounted","onClose","DialogTitle","id","DialogContent","dividers","Typography","gutterBottom","variant","DialogActions","color","CustomText","name","otherProps","useField","field","meta","ConfigTextField","touched","error","helperText","TextField","CustomCkBox","label","legend","setFieldValue","useFormikContext","configCheck","labelplacement","onChange","event","checked","target","configFormControl","FormControl","FormLabel","component","FormGroup","FormControlLabel","control","Checkbox","CustomSubmit","child","submitForm","configButton","CustomLottie","lotti","widthHeight","setWidthHeight","useEffect","window","screen","width","defaultOptions","loop","autoplay","animationData","options","height","REPORT_VALIDATE","yup","shape","chestPain","integer","required","fastingBloodSugar","restingECG","exerciseInducedAngina","peakExerciseSTSegment","thalassemia","gender","restingBloodPressure","positive","min","max","serumCholestoral","maxHeartRateAchieved","stDepressionInducedByExercise","numberOfMajorVesselsColoredByFlourosopy","age","INIT_REPORT","EMAIL_VALIDATE","email","terms","oneOf","INIT_EMAIL","useStyles","makeStyles","theme","welcome","breakpoints","up","textAlign","marginTop","lottie","form","chatBtn","backgroundColor","borderRadius","border","footer","borderTop","Home","history","useHistory","classes","Grid","container","spacing","item","xs","md","className","style","fontFamily","initialValues","validationSchema","onSubmit","data","console","log","fetch","method","body","JSON","stringify","headers","then","response","json","push","catch","alert","startIcon","hello","chat","boxShadow","Chatbot","height_","setHeight_","width_","setWidth_","vh","Math","round","vhToPixels_Width","title","allow","autoComplete","src","CustomSelect","configSelect","select","value","Object","keys","map","pos","MenuItem","root","paddingLeft","paddingTop","inputWidth","paddingBottom","LongInputWidth","reportBtn","marginBottom","marginRight","Help","args","Tooltip","text","fontSize","Report","formSub","close","dis","reportData","helpers","align","type","appBar","position","marginLeft","flex","float","fontWeight","ReportPop","fullScreen","AppBar","Toolbar","IconButton","edge","navbar","content","header","goBack","paddingRight","CustomAlert","e","reason","Snackbar","autoHideDuration","Alert","severity","AlertTitle","b1","b2","BackButton","params","resp","status","err","redirect","Consult","helloDoc","setHelloDoc","disBtn","setDisBtn","disLottie","setLottie","formSubmit","setFormSubmit","art","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.da91f9ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { Typography } from '@material-ui/core';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function Terms() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen}>\r\n        Read Terms and Conditions\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          Doctor Chatbot Privacy Policy\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography gutterBottom>\r\n            This Privacy Policy applies to the practices of Doctor Chatbot concerning information that is obtained by and through your use of our website, web application or mobile application and the services provided through the Application. Doctor Chatbot is committed to respecting your privacy and recognizing your need for appropriate protection and management of personally identifiable information (“PII”) and the information you share. The purpose of this Privacy Policy is to explain the types of information This Project obtains about users of our Application and/or Services, how the information is obtained, how it is used, how it is disclosed, how you can get access to this information, and the choices you have regarding our use of, and your ability to review and correct, the information. By using the Application and/or the Services, you are accepting and consenting to the use of your information as described in this Policy and you agree to be bound by this Policy. Please review this Policy carefully. <br/><br/>\r\n            This Privacy Policy applies only to this Application and Services and becomes effective as soon as you use the Application. Any other services rendered by any independent provider are subject to that particular provider’s own privacy standards or policies.\r\n          </Typography>\r\n          <br/>\r\n          <Typography gutterBottom variant='h6'>\r\n            Terms and Conditions\r\n          </Typography>\r\n          <Typography gutterBottom>\r\n          The only PII that the Application obtains is information that you voluntarily provide or authorize. When you use our Services, we collect PII such as your name, age, gender, email address etc. We also may collect PII or Protected Health Information (“PHI”) from you when you make a request to be connected with an independent medical practice, which may provide an on-call licensed physician to provide non-emergency general adult and pediatric healthcare services at your location; create a profile; or comment on articles or complete surveys. <br/><br/>\r\n          The information that we collect varies depending upon how you use our Services. When you choose to Enroll, you will need to provide us with health-related information that a provider will need to determine whether he/she is willing to provide services to you. That information will be associated with your profile. Any PHI that you provide through the Application briefly describing your symptoms (or those of any minor for whom you request Services) will be sent to our employed medical provider or an independent alternate provider to be used for treatment and processing your payment for the Visit, and other services. All providers are bound to protect all PHI of patients in accordance with HIPAA rules, as outlined in our Notice of Privacy Practices.\r\n          </Typography>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"#2b303e\">\r\n            CLOSE\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react'\r\nimport { TextField } from '@material-ui/core'\r\nimport { useField } from 'formik'\r\n\r\nconst CustomText = ({\r\n    name,\r\n    ...otherProps\r\n}) => {\r\n    const [field, meta] = useField(name);\r\n\r\n    const ConfigTextField = {\r\n        ...field,\r\n        ...otherProps,\r\n        variant: \"outlined\"\r\n    };\r\n\r\n    if( meta && meta.touched && meta.error ){\r\n        ConfigTextField.error = true;\r\n        ConfigTextField.helperText = meta.error;\r\n    }\r\n\r\n    return (\r\n        <TextField {...ConfigTextField} />\r\n    )\r\n};\r\n\r\nexport default CustomText;","import React from 'react'\r\nimport { Checkbox, FormControl, FormControlLabel, FormGroup, FormLabel } from '@material-ui/core'\r\nimport { useField, useFormikContext } from 'formik';\r\n\r\nconst CustomCkBox = ({\r\n    name, label, legend, ...otherProps\r\n}) => {\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleChange = event => {\r\n        const {checked} = event.target;\r\n        setFieldValue(name, checked);\r\n    };\r\n\r\n    const configCheck = {\r\n        ...field,\r\n        ...otherProps,\r\n        color: \"primary\",\r\n        labelplacement: \"end\",\r\n        onChange: handleChange\r\n    };\r\n\r\n    const configFormControl = {};\r\n    if( meta && meta.touched && meta.error ){\r\n        configFormControl.error = true;\r\n    }\r\n\r\n    return (\r\n        <FormControl {...configFormControl} >\r\n            <FormLabel component=\"legend\"> {legend} </FormLabel>\r\n            <FormGroup>\r\n                <FormControlLabel control={<Checkbox {...configCheck} />} label={label} />\r\n            </FormGroup>\r\n        </FormControl>\r\n    )\r\n};\r\n\r\nexport default CustomCkBox\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { useFormikContext } from 'formik'\r\n\r\nconst CustomSubmit = ({\r\n    child,\r\n    ...otherProps\r\n}) => {\r\n    const { submitForm } = useFormikContext();\r\n    const handleSubmit = () => {\r\n        submitForm();\r\n    }\r\n\r\n    const configButton = {\r\n        ...otherProps,\r\n        variant: 'contained',\r\n        color: \"primary\",\r\n        onClick: handleSubmit\r\n    }\r\n\r\n    return (\r\n        <Button {...configButton} >\r\n            {child}\r\n        </Button>\r\n    )\r\n};\r\n\r\nexport default CustomSubmit\r\n","import React from \"react\";\r\nimport Lottie from \"react-lottie\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function CustomLottie({ lotti }) {\r\n    const [widthHeight, setWidthHeight] = useState(500);\r\n\r\n    useEffect(() => {\r\n        if( window.screen.width <= 600 ){\r\n            setWidthHeight(350)\r\n        }\r\n    }, [])\r\n\r\n    const defaultOptions = {\r\n        loop: true,\r\n        autoplay: true,\r\n        animationData: lotti\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Lottie \r\n            options={defaultOptions} \r\n            height={widthHeight} \r\n            width={widthHeight} \r\n        />\r\n        </>\r\n    );\r\n}","import * as yup from 'yup';\r\n\r\nexport const REPORT_VALIDATE = yup.object().shape({\r\n    chestPain: yup.number().integer().required(\"What Type of Chest Pain?\"),\r\n    fastingBloodSugar: yup.number().integer().required(\"Please Select Yes or No\"),\r\n    restingECG: yup.number().integer().required(\"Please Select Resting ECG Type\"),\r\n    exerciseInducedAngina: yup.number().integer().required(\"Please Select Yes or No\"),\r\n    peakExerciseSTSegment: yup.number().integer().required(\"Please Select an Option\"),\r\n    thalassemia: yup.number().integer().required(\"Select Thalassemia Type?\"),\r\n    gender: yup.number().integer().required(\"Male or Female?\"),\r\n\r\n    restingBloodPressure: yup.number(\"Enter a Number\").positive().integer().min(50).max(300).required(\"Blood Pressure Value (mmHg)..\"),\r\n    serumCholestoral: yup.number(\"Enter a Number\").positive().integer().min(100).max(300).required(\"Cholesterol Value (mg/dl)..\"),\r\n    maxHeartRateAchieved: yup.number(\"Enter a Number\").positive().integer().min(50).max(300).required(\"Max. Heart Rate...\"),\r\n    stDepressionInducedByExercise: yup.number(\"Enter a Number\").min(0).max(10).required(\"Enter ST Depression Value..\"),\r\n    numberOfMajorVesselsColoredByFlourosopy: yup.number(\"Enter a Number\").integer().min(0).max(10).required(\"Enter Fluoroscopy Value..\"),\r\n    age: yup.number(\"Enter a Number\").positive().integer().min(1).max(150).required(\"Enter Age..\")\r\n});\r\n\r\nexport const INIT_REPORT = {\r\n    chestPain: '',\r\n    fastingBloodSugar: '',\r\n    restingECG: '',\r\n    exerciseInducedAngina: '',\r\n    peakExerciseSTSegment: '',\r\n    thalassemia: '',\r\n\r\n    restingBloodPressure: '',\r\n    serumCholestoral: '',\r\n    maxHeartRateAchieved: '',\r\n    stDepressionInducedByExercise: '',\r\n    numberOfMajorVesselsColoredByFlourosopy: '',\r\n    age: '',\r\n    gender: ''\r\n};\r\n\r\nexport const EMAIL_VALIDATE = yup.object().shape({\r\n    email: yup.string()\r\n                .email(\"Invalid Email Format\")\r\n                .required(\"Please Provide Email to proceed...\"),\r\n    terms: yup.boolean()\r\n                .oneOf([true], 'You must Agree the Terms and Conditions')\r\n                .required(\"Please Accept Terms & Conditions!\")\r\n});\r\n\r\nexport const INIT_EMAIL = {\r\n    email: '',\r\n    terms: false\r\n};","import { useHistory } from \"react-router-dom\";\r\nimport { Formik, Form } from 'formik';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport QuestionAnswerIcon from '@material-ui/icons/QuestionAnswer';\r\n\r\nimport Terms from './Terms';\r\nimport CustomText from './templates/CustomText';\r\nimport CustomCkBox from './templates/CustomCkBox';\r\nimport CustomSubmit from './templates/CustomSubmit';\r\nimport CustomLottie from './templates/CustomLottie';\r\n\r\nimport { EMAIL_VALIDATE, INIT_EMAIL } from './data/data';\r\nimport hello from './data/hello.json';\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    welcome: {\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '70vh',\r\n            textAlign: 'center',\r\n            marginTop: 60\r\n        },\r\n        textAlign: 'center',\r\n        padding: 20\r\n    },\r\n    lottie: {\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '90vh'\r\n        }\r\n    },\r\n    form: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '70vh'\r\n        },\r\n        width: '50vh'\r\n    },\r\n    chatBtn: {\r\n        backgroundColor: '#2b303e',\r\n        color: 'white',\r\n        width: '45vh',\r\n        height: '8vh',\r\n        borderRadius: 50,\r\n        border: '2px solid orange'\r\n    },\r\n    footer: {\r\n        height: '10vh',\r\n        textAlign: 'center',\r\n        borderTop: '1px solid #2b303e'\r\n    }\r\n}));\r\n\r\nfunction Home() {\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n    \r\n    const goToConsult = (data) => {\r\n        console.log(\"---- Sending Email ----\");\r\n        fetch('/email', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then(data => { \r\n            console.log('Successfully Sent Email:', data); \r\n            history.push(\"/consult\");\r\n        })\r\n        .catch((error) => { \r\n            console.error('Failed to Sent Email:', error); \r\n            alert(\"Couldn't Send Email! Please check your Network Connection!\")\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12} md={7} className={classes.welcome}>\r\n                    <Typography variant='h2' style={{ fontFamily: 'Lobster' }}>\r\n                        Welcome to Doctor Chatbot\r\n                    </Typography>\r\n                    <Typography variant='h4' style={{ fontFamily: 'Dancing Script' }}>\r\n                        A Heart Disease Prediction System\r\n                    </Typography>  \r\n                    <Formik \r\n                        initialValues={{ ...INIT_EMAIL }}\r\n                        validationSchema={EMAIL_VALIDATE}\r\n                        onSubmit={ goToConsult } \r\n                        >\r\n                        <Form>\r\n                            <br/>\r\n                            <CustomText \r\n                                name=\"email\"\r\n                                label=\"Please Enter Your Email to Continue...\"\r\n                                className={classes.form}\r\n                            />\r\n                            <br/><br/>\r\n                            <CustomCkBox\r\n                                name=\"terms\" \r\n                                legend=\"Please Agree Terms and Conditions\"\r\n                                label=\"I Agree Terms and Conditions\"\r\n                            />\r\n                            <Terms />\r\n                            <br/>\r\n                            <CustomSubmit \r\n                                child=\"Chat with Doctor\" \r\n                                startIcon={<QuestionAnswerIcon />} \r\n                                className={classes.chatBtn}\r\n                            />\r\n                        </Form>\r\n                    </Formik>\r\n                </Grid>\r\n                <Grid item xs={12} md={5} className={classes.lottie} >\r\n                    <CustomLottie lotti={hello} />\r\n                </Grid>\r\n                <Grid item xs={12} className={classes.footer}>\r\n                    <Typography variant='h6' style={{ fontFamily: 'Indie Flower' }}>\r\n                        B.E. Final Year Project, Made by Sherwin, Rutvij, Preston and Macklon\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    chat: {\r\n        border: '1px solid grey', \r\n        boxShadow: 'rgba(17, 17, 26, 0.1) 0px 8px 24px, rgba(17, 17, 26, 0.1) 0px 16px 56px, rgba(17, 17, 26, 0.1) 0px 24px 80px', \r\n    }\r\n});\r\n\r\nfunction Chatbot() {\r\n    const classes = useStyles();\r\n    const [height_, setHeight_] = useState(\"550\");\r\n    const [width_, setWidth_] = useState(\"500\");\r\n\r\n    function vhToPixels_Height (vh) {\r\n        return Math.round(window.screen.height / (100 / vh));\r\n    }\r\n    function vhToPixels_Width (vh) {\r\n        return Math.round(window.screen.width / (100 / vh));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if( window.screen.width <= 600 ){\r\n            setHeight_( vhToPixels_Height(87) );\r\n            setWidth_( vhToPixels_Width(95) );\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <iframe\r\n                title=\"Doctor Chatbot\"\r\n                allow=\"microphone;\"\r\n                autoComplete=\"off\"\r\n                className={classes.chat}\r\n                height={height_}\r\n                width={width_}\r\n                src=\"https://console.dialogflow.com/api-client/demo/embedded/0eee2d04-83be-47bc-9580-4a5e517e0990\">\r\n            </iframe>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chatbot\r\n","import React from 'react'\r\nimport { TextField, MenuItem } from '@material-ui/core'\r\nimport { useField, useFormikContext } from 'formik';\r\n\r\nconst CustomSelect = ( {name, options, ...otherProps} ) => {\r\n    const { setFieldValue } = useFormikContext();\r\n    const [field, meta] = useField(name);\r\n\r\n    const handleChange = event => {\r\n        const {value} = event.target;\r\n        setFieldValue(name, value);\r\n    };\r\n\r\n    const configSelect = {\r\n        ...field,\r\n        ...otherProps,\r\n        select: true,\r\n        variant: \"outlined\",\r\n        onChange: handleChange\r\n    };\r\n\r\n    if( meta && meta.touched && meta.error ){\r\n        configSelect.error = true;\r\n        configSelect.helperText = meta.error;\r\n    }\r\n\r\n    return (\r\n        <TextField {...configSelect}>\r\n            { Object.keys(options).map( (item, pos) => {\r\n                return (\r\n                    <MenuItem key={pos} value={item}>\r\n                        { options[item] }\r\n                    </MenuItem>\r\n                )\r\n            } ) }\r\n        </TextField>\r\n    )\r\n};\r\n\r\nexport default CustomSelect\r\n","import { Formik, Form } from 'formik';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport BackupIcon from '@material-ui/icons/Backup';\r\n\r\nimport CustomText from './templates/CustomText';\r\nimport CustomSubmit from './templates/CustomSubmit';\r\nimport CustomSelect from './templates/CustomSelect';\r\n\r\nimport { REPORT_VALIDATE, INIT_REPORT } from './data/data';\r\nimport reportData from './data/report_select.json';\r\nimport helpers from './data/helpers.json';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        [theme.breakpoints.up('md')]: {\r\n            paddingLeft: 50,\r\n            paddingTop: 30\r\n        },\r\n        paddingLeft: 10,\r\n        paddingTop: 20\r\n    },\r\n    inputWidth: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '90vh',\r\n            paddingBottom: 20\r\n        },\r\n        width: '50vh',\r\n        paddingBottom: 20\r\n    },\r\n    LongInputWidth: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '192vh',\r\n            paddingBottom: 20\r\n        },\r\n        width: '50vh',\r\n        paddingBottom: 20\r\n    },\r\n    reportBtn: {\r\n        backgroundColor: '#2b303e',\r\n        color: 'white',\r\n        width: '52vh',\r\n        height: '8vh',\r\n        borderRadius: 50,\r\n        marginBottom: 20,\r\n        marginRight: 10\r\n    }\r\n}));\r\n\r\nfunction Report(props) {\r\n    const classes = useStyles();\r\n\r\n    const submitForm = (data) => {\r\n        console.log(\"---- Sending Report Data ----\");\r\n        fetch('/report', {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(response => response.json())\r\n        .then(data => { \r\n            console.log('Successfully Sent Report Data:', data);\r\n            props.formSub();\r\n        })\r\n        .catch((error) => { \r\n            alert(\"Something Went Wrong! Form is not Submitted! You may still continue to chat with the Bot!\");\r\n            console.error('Failed to Sent Report Data:', error); \r\n        });\r\n\r\n        props.close();\r\n        props.dis();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Formik \r\n                initialValues={{ ...INIT_REPORT }}\r\n                validationSchema={REPORT_VALIDATE}\r\n                onSubmit={ submitForm } \r\n                >\r\n                <Form>\r\n                    <Grid container className={classes.root}>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"age\"\r\n                                    label=\"Enter Your Age\"\r\n                                    helperText=\"Age\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"gender\"\r\n                                    label=\"Select Your Gender\"\r\n                                    helperText=\"Gender\"\r\n                                    className={classes.inputWidth}\r\n                                    options={reportData.gender}\r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"chestPain\"\r\n                                    label=\"Chest Pain Types\"\r\n                                    helperText=\"Type Of Chest Pain\"\r\n                                    className={classes.inputWidth}\r\n                                    options={reportData.chestPain}\r\n                                />\r\n                                <Help text={helpers.chestPain} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"restingBloodPressure\"\r\n                                    label=\"Resting Blood Pressure\"\r\n                                    helperText=\"Blood Pressure (mmHg)\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.restingBloodPressure} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"serumCholestoral\"\r\n                                    label=\"Serum Cholesterol\"\r\n                                    helperText=\"Cholesterol Value (mg/dl)\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.serumCholestoral} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"fastingBloodSugar\"\r\n                                    label=\"Fasting Blood Sugar\"\r\n                                    helperText=\"Fasting Blood Sugar > 120mg/dl\"\r\n                                    className={classes.inputWidth}\r\n                                    options={reportData.fastingBloodSugar}\r\n                                />\r\n                                <Help text={helpers.fastingBloodSugar} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12}>\r\n                                <CustomSelect\r\n                                    name=\"restingECG\"\r\n                                    label=\"Resting ECG\"\r\n                                    helperText=\"Resting ECG\"\r\n                                    options={reportData.restingECG}\r\n                                    className={classes.LongInputWidth}\r\n                                />\r\n                                <Help text={helpers.restingECG} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"maxHeartRateAchieved\"\r\n                                    label=\"Max. Heart Rate Achieved\"\r\n                                    helperText=\"Max. Heart Rate\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.maxHeartRateAchieved} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"exerciseInducedAngina\"\r\n                                    label=\"Exercise Induced Angina\"\r\n                                    helperText=\"Exercise Induced Angina\"\r\n                                    options={reportData.exerciseInducedAngina}\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.exerciseInducedAngina} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"stDepressionInducedByExercise\"\r\n                                    label=\"ST Depression Induced by Exercise\"\r\n                                    helperText=\"ST Depression Value\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.stDepressionInducedByExercise} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"peakExerciseSTSegment\"\r\n                                    label=\"Peak Exercise ST Segment\"\r\n                                    helperText=\"Peak Exercise ST Segment\"\r\n                                    options={reportData.peakExerciseSTSegment}\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.peakExerciseSTSegment} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomText \r\n                                    name=\"numberOfMajorVesselsColoredByFlourosopy\"\r\n                                    label=\"Number of Major Vessels Colored by Fluoroscopy\"\r\n                                    helperText=\"Fluoroscopy Result Value\"\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.numberOfMajorVesselsColoredByFlourosopy} />\r\n                            </Grid>\r\n                            <Grid item xs={12} md={6}>\r\n                                <CustomSelect\r\n                                    name=\"thalassemia\"\r\n                                    label=\"Thalassemia\"\r\n                                    helperText=\"Thalassemia\"\r\n                                    options={reportData.thalassemia}\r\n                                    className={classes.inputWidth}\r\n                                />\r\n                                <Help text={helpers.thalassemia} />\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container>\r\n                            <Grid item xs={12} align='center'>\r\n                                <CustomSubmit \r\n                                    child=\"Submit Report\" \r\n                                    type='submit'\r\n                                    startIcon={<BackupIcon />} \r\n                                    className={classes.reportBtn} \r\n                                />\r\n                                <CustomSubmit \r\n                                    child=\"Reset Report\" \r\n                                    type='reset'\r\n                                    startIcon={<CancelIcon />} \r\n                                    className={classes.reportBtn} \r\n                                />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Form>\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Help(args) {\r\n    return(\r\n        <Tooltip title={args.text}>\r\n            <HelpIcon fontSize=\"medium\" />\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default Report\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nimport Report from '../Report';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n    backgroundColor: '#2b303e'\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  reportBtn: {\r\n    float: 'right', \r\n    color: 'orange', \r\n    '&:hover': {\r\n        fontWeight: 'bolder'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function ReportPop(props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen} className={classes.reportBtn}>\r\n        Report Form\r\n      </Button>\r\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Report\r\n            </Typography>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Report close={handleClose} dis={props.dis} formSub={props.formSub} />\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport { Alert, AlertTitle } from '@material-ui/lab';\r\nimport { Button, makeStyles, Typography } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Chatbot from \"./Chatbot\";\r\nimport ReportPop from \"./templates/ReportPop\";\r\nimport CustomLottie from './templates/CustomLottie';\r\nimport art from './data/chat.json';\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    navbar: {\r\n        backgroundColor: '#2b303e',\r\n        height: '10vh'\r\n    },\r\n    content: {\r\n        [theme.breakpoints.up('md')]: {\r\n            height: '90vh',\r\n            textAlign: 'center'\r\n        },\r\n        textAlign: 'center'\r\n    },\r\n    header: {\r\n        [theme.breakpoints.up('md')]: {\r\n            fontFamily: 'Lobster', \r\n            color: 'white', \r\n            float: 'left', \r\n            paddingLeft: 30\r\n        },\r\n        fontFamily: 'Lobster', \r\n        color: 'white', \r\n        fontSize: 20,\r\n        float: 'left', \r\n        paddingLeft: 5\r\n    },\r\n    goBack: {\r\n        [theme.breakpoints.up('md')]: {\r\n            float: 'right', \r\n            color: 'orange', \r\n            paddingRight: 30, \r\n            paddingLeft: 30,\r\n            '&:hover': {\r\n                fontWeight: 'bolder'\r\n            }\r\n        },\r\n        float: 'right', \r\n        color: 'orange', \r\n        '&:hover': {\r\n            fontWeight: 'bolder'\r\n        }\r\n    }\r\n}));\r\n\r\nfunction Consult() {\r\n    const [helloDoc, setHelloDoc] = useState(false);\r\n    const [disBtn, setDisBtn] = useState(true);\r\n    const [disLottie, setLottie] = useState(true);\r\n    const [formSubmit, setFormSubmit] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        setHelloDoc(true);\r\n        if( window.screen.width <= 600 ){\r\n            setLottie(false)\r\n        }\r\n    }, []);\r\n\r\n    const disableButton = () => {\r\n        setDisBtn(false);\r\n    };\r\n\r\n    const formSuccess = () => {\r\n        setFormSubmit(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Grid container spacing={2}>\r\n            <Grid item xs={12} className={classes.navbar}>\r\n                <Typography variant='h6' className={classes.header}>\r\n                    Doctor Chatbot\r\n                </Typography>\r\n                <BackButton title=\"End Chat\" redirect=\"/\" />\r\n                { \r\n                    disBtn && \r\n                    <ReportPop dis={disableButton} formSub={formSuccess} /> \r\n                }\r\n            </Grid>\r\n            {\r\n                disLottie && \r\n                <Grid item xs={12} md={5} className={classes.content}>\r\n                    <CustomLottie lotti={art} />\r\n                </Grid>\r\n            }\r\n            <Grid item xs={12} md={7} className={classes.content}>\r\n                <Chatbot />\r\n            </Grid>\r\n            { \r\n                helloDoc && \r\n                <CustomAlert \r\n                    type=\"info\" \r\n                    title=\"Say Hello to Doctor Chatbot!\" \r\n                    b1=\"Start Typing\" \r\n                    b2=\"Hi\" \r\n                /> \r\n            }\r\n            { \r\n                formSubmit && \r\n                <CustomAlert \r\n                    type=\"success\" \r\n                    title=\"Report Submitted Successfully\" \r\n                    b1=\"Continue Chatting\" \r\n                    b2=\"Submitted\" \r\n                /> \r\n            }\r\n        </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CustomAlert(args) {\r\n    const [open, setOpen] = useState(true);\r\n\r\n    const handleClose = (e, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpen(false);\r\n    };\r\n\r\n    return(\r\n        <>\r\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={args.type}>\r\n                <AlertTitle>{args.title}</AlertTitle>\r\n                {args.b1} — <strong>Say '{args.b2}'</strong>\r\n            </Alert>\r\n        </Snackbar>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction BackButton(params){\r\n    const history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const goBack = () => {\r\n        console.log(\"Erasing Data.....\");\r\n        fetch('/clear', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        }).then(resp => {\r\n            if( resp.status === 200 ){\r\n                return resp.json()\r\n            }\r\n        }).then( data => console.log(data) )\r\n        .then(err => console.log(err))\r\n\r\n        console.log(\"Redirecting/Refreshing....\");\r\n        history.push(params.redirect);\r\n    };\r\n\r\n    return (\r\n        <Button onClick={goBack} className={classes.goBack}> \r\n            {params.title} \r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default Consult\r\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Consult from './components/Consult';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/consult\" component={Consult} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}